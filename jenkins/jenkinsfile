pipeline {
    parameters {
        choice(name: 'terraformAction', choices: ['apply', 'destroy'], description: 'Choose the Terraform action to perform')
    }

    environment {
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    }

    agent any

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'iac', url: 'https://github.com/dileep-n-gowda/gratest--of-devops.git'
            }
        }

        stage('Plan') {
            steps {
                sh '''
                    cd terraform
                    terraform init
                    terraform plan -out=tfplan
                    terraform show -no-color tfplan > tfplan.txt
                '''
            }
        }

        stage('Approval') {
            steps {
                script {
                    def plan = readFile('terraform/tfplan.txt')
                    input message: "Review Terraform Plan",
                          parameters: [
                              text(name: 'Plan', description: 'Please review the Terraform execution plan:', defaultValue: plan)
                          ]
                }
            }
        }

        stage('Create/Destroy') {
            when {
                expression {
                    return params.terraformAction in ['apply', 'destroy']
                }
            }
            steps {
                script {
                    dir('terraform') {
                        if (params.terraformAction == 'apply') {
                            sh 'terraform apply -input=false tfplan'
                        } else if (params.terraformAction == 'destroy') {
                            input message: "Are you sure you want to destroy the resources?",
                                  parameters: [
                                      booleanParam(name: 'ConfirmDestroy', defaultValue: false, description: 'Confirm to proceed with destroy.')
                                  ]
                            sh 'terraform destroy -auto-approve'
                        }
                    }
                }
            }
        }
    }
}

